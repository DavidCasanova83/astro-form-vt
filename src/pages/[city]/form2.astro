---
import Header from '../../components/Header.astro';
import "../../styles/global.css";
import cities from '../../data/cities.json'; // ðŸ”¥ Import des villes dynamiques

// Astro doit savoir quelles pages gÃ©nÃ©rer avant le build
export async function getStaticPaths() {
  return cities.map(city => ({ params: { city } }));
}
---

<html lang="fr">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta charset="UTF-8" />
    <title>Formulaire Ã‰tape 2</title> <!-- ðŸ”¥ Valeur par dÃ©faut -->
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
</head>
<body class="bg-gray-100 text-gray-800">
    <Header />
    <main class="container mx-auto p-4 max-w-lg"
        x-init="
            city = window.location.pathname.split('/')[1]; 
            document.title = 'Formulaire - ' + city + ' - Ã‰tape 2';
            formAnswers = JSON.parse(localStorage.getItem('formAnswers') || '{}');
            $watch('formAnswers', value => localStorage.setItem('formAnswers', JSON.stringify(value)))
        "
        x-data="{ 
            city: '',  
            profile: '', 
            profileUnknown: false, // GÃ¨re l'Ã©tat du bouton 'Inconnu'
            ageGroups: [],
            ageUnknown: false, // GÃ¨re l'Ã©tat du bouton 'Inconnu' pour l'Ã¢ge
            formAnswers: {}  
        }">
      
        <h1 class="text-3xl font-bold mb-4">Formulaire - <span x-text="city"></span> - Ã‰tape 2</h1>

        <!-- Question 1 : Profil -->
        <p class="text-xl mb-4">DÃ©finir le profil :</p>
        <div class="flex flex-wrap justify-start gap-2 md:gap-4 mb-2">
            <template x-for="option in ['Seul', 'Couple', 'Famille', 'Groupe dâ€™amis']">
                <button 
                    type="button"
                    x-on:click="profile = option; profileUnknown = false"
                    :class="profile === option ? 'bg-blue-500 text-white' : 'bg-gray-200 text-black'"
                    class="w-full md:w-auto px-4 py-2 rounded hover:bg-blue-400"
                    :disabled="profileUnknown">
                    <span x-text="option"></span>
                </button>
            </template>
        </div>
        <!-- Bouton Inconnu -->
        <button 
            type="button"
            x-on:click="profileUnknown = !profileUnknown; if(profileUnknown) profile = 'Inconnu'; else profile = ''"
            :class="profileUnknown ? 'bg-blue-500 text-white' : 'bg-gray-200 text-black'"
            class="w-full md:w-auto px-4 py-2 rounded hover:bg-blue-400">
            Inconnu
        </button>

        <!-- SÃ©parateur -->
        <hr class="my-6 border-gray-300">

        <!-- Question 2 : Tranche dâ€™Ã¢ge -->
        <p class="text-xl mb-4">Tranche(s) dâ€™Ã¢ge correspondant :</p>
        <div class="flex flex-wrap justify-start gap-2 md:gap-4 mb-2">
            <template x-for="option in ['18-25', '25-40', '40-60', '60+']">
                <button 
                    type="button"
                    x-on:click="ageGroups.includes(option) ? ageGroups.splice(ageGroups.indexOf(option), 1) : ageGroups.push(option)"
                    :class="ageGroups.includes(option) ? 'bg-blue-500 text-white' : 'bg-gray-200 text-black'"
                    class="w-full md:w-auto px-4 py-2 rounded hover:bg-blue-400"
                    :disabled="ageUnknown">
                    <span x-text="option"></span>
                </button>
            </template>
        </div>
        <!-- Bouton Inconnu pour l'Ã¢ge -->
        <button 
            type="button"
            x-on:click="ageUnknown = !ageUnknown; if(ageUnknown) ageGroups = ['Inconnu']; else ageGroups = []"
            :class="ageUnknown ? 'bg-blue-500 text-white' : 'bg-gray-200 text-black'"
            class="w-full md:w-auto px-4 py-2 rounded hover:bg-blue-400">
            Inconnu
        </button>
        <br>
        <!-- Bouton de validation -->
        <button
            type="button"
            x-on:click="if(profile || profileUnknown){ 
                formAnswers.city = city;
                formAnswers.profile = profile;
                formAnswers.ageGroups = ageGroups;
                localStorage.setItem('formAnswers', JSON.stringify(formAnswers));
                console.log('Form2 - DonnÃ©es sauvegardÃ©es : ', JSON.parse(localStorage.getItem('formAnswers')));

                // Redirige vers l'Ã©tape 3 en conservant la ville dÃ©tectÃ©e
                window.location.href = '/' + city + '/form3';
            } else { 
                alert('Veuillez sÃ©lectionner un profil et au moins une tranche dâ€™Ã¢ge'); 
            }"
            class="w-full md:w-auto bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded mt-6">
            Valider
        </button>
    </main>
</body>
</html>
